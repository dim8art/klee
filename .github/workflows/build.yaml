---
name: CI

on:
  pull_request:
    branches: [main, utbot-main, TESTRUNSE]
  push:
    branches: [main, utbot-main, TESTRUNSE]

# Defaults for building KLEE
env:
  BASE_IMAGE: ubuntu:jammy-20230126
  REPOSITORY: ghcr.io/unittestbot/klee
  BUILD_SUFFIX: "default"
  COVERAGE: 0
  DISABLE_ASSERTIONS: 0
  ENABLE_DOXYGEN: 0
  ENABLE_OPTIMIZED: 1
  ENABLE_DEBUG: 1
  GTEST_VERSION: 1.11.0
  KLEE_RUNTIME_BUILD: "Debug+Asserts"
  LLVM_VERSION: 11
  MINISAT_VERSION: "master"
  REQUIRES_RTTI: 0
  SOLVERS: BITWUZLA:Z3:STP
  STP_VERSION: 2.3.3
  TCMALLOC_VERSION: 2.9.1
  UCLIBC_VERSION: klee_uclibc_v1.3
  USE_TCMALLOC: 1
  USE_LIBCXX: 1
  Z3_VERSION: 4.8.15
  SQLITE_VERSION: 3400100
  BITWUZLA_VERSION: 0.3.1
  JSON_VERSION: v3.11.3
  IMMER_VERSION: v0.8.1

jobs:
  Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [

          "ASan",
          "UBSan",
          "MSan"
        ]
        include:
          - name: "ASan"
            env:
              SANITIZER_BUILD: address
              ENABLE_OPTIMIZED: 0
              USE_TCMALLOC: 0
              SANITIZER_LLVM_VERSION: 12
          - name: "UBSan"
            env:
              SANITIZER_BUILD: undefined
              ENABLE_OPTIMIZED: 0
              USE_TCMALLOC: 0
              SANITIZER_LLVM_VERSION: 12
          - name: "MSan"
            env:
              SANITIZER_BUILD: memory
              ENABLE_OPTIMIZED: 0
              USE_TCMALLOC: 0
              SOLVERS: STP
              SANITIZER_LLVM_VERSION: 14
    steps:
      - name: Checkout KLEE source code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Memory layout fix for old clang
        run: |
          # TODO remove this once upstream fix is available
          sudo sysctl -w vm.mmap_rnd_bits=28
      - name: Build KLEE
        env: ${{ matrix.env }}
        run: scripts/build/build.sh klee --docker --create-final-image
      - name: Run tests
        env: ${{ matrix.env }}
        run: scripts/build/run-tests.sh --run-docker --debug

  Docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout KLEE Code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build Docker image
        run: docker build .

  Coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [
          "STP",
          "Z3",
          "Bitwuzla",
        ]
        include:
          - name: "STP"
            env:
              SOLVERS: STP
          - name: "Z3"
            env:
              SOLVERS: Z3:STP
          - name: "Bitwuzla"
            env:
              SOLVERS: BITWUZLA:Z3
    env:
      ENABLE_OPTIMIZED: 0
      COVERAGE: 1
    steps:
      - name: Checkout KLEE source code
        uses: actions/checkout@v3
        with:
          # Codecov may run into "Issue detecting commit SHA. Please run
          # actions/checkout with fetch-depth > 1 or set to 0" when uploading.
          # See also https://github.com/codecov/codecov-action/issues/190
          fetch-depth: 2
          submodules: recursive
      - name: Build KLEE
        env: ${{ matrix.env }}
        run: scripts/build/build.sh klee --docker --create-final-image
      - name: Run tests
        env: ${{ matrix.env }}
        run: scripts/build/run-tests.sh --coverage --upload-coverage --run-docker --debug

  clang-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.x
    - uses: pre-commit/action@v3.0.1
